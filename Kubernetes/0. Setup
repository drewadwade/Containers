0. Setup

Install kubectl
	download kubectl
		curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
	download hash and confirm integrity
		curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
		echo "$(<kubectl.sha256) kubectl" | sha256sum --check
	install
		sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
			If no root access on the target system, can still install kubectl to ~/.local/bin
				mkdir -p ~/.local/bin/kubectl
				mv ./kubectl ~/.local/bin/kubectl
			and then add ~/.local/bin/kubectl to $PATH
				PATH = $PATH + "~/.local/bin/kubectl"
	confirm installation
		kubectl version --client


Install kubeconfig file 
	Less temporary
		mv /path/to/kubeconfig/file ~/.kube/new.config 
	More temporary	
		KUBECONFIG=path/to/kubeconfig/file kubectl...
		may wish to make alias to save typing env variable each time
			alias k='KUBECONFIG=path/to/kubeconfig/file kubectl'
				for fish: alias k 'KUBECONFIG=path/to/kubeconfig/file kubectl'
	To skip TLS verification add to kubectl commands or alias: 
		--insecure-skip-tls-verify


Confirm kubeconfig working
	kubectl version 




GKE
	Log in to GCP 
		gcloud auth login
		OR use GCP cloudshell

	Get kubectl config file
		gcloud auth login
		(gcloud projects list)
		(gcloud config set project <project_ID>)
		gcloud container clusters get-credentials <cluster_name> --zone <GCP_Zone>

	Connect to worker nodes
		gcloud compute ssh <node_name> --zone <GCP_Zone>

	https://cloud.google.com/sdk/docs/cheatsheetInspi



AWS K8s
	Initiate Connection
		aws configure
			provide Access Key ID, Secret Access Key, Region 
		aws eks update-kubeconfig --name <EKS_resource_name> --profile <your_profile_name>

